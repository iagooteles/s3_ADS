1. Selecione nome e data de nascimento de todos os usuários (0.5)

     select nome, data_de_nascimento from usuario;

2. Selecione descrição e saldo de todas as contas do usuário com código = 1 (0.5)

    select descricao, saldo from conta where codigo_usuario = 1;

3. Selecione todas as colunas de todas as movimentações bancárias (0.5)

    select * from movimentacao;

4. Insira um novo usuário no sistema, insira o tipo de conta “Conta investimento”, insira uma nova conta do tipo “Conta investimento” e insira uma nova movimentação bancária do tipo CRÉDITO (0.5)

5. Atualize o cep do usuário 2 para “60115170” (0.5)

    update usuario set cep = '60115170' where codigo = 2;

6. Remova todas as movimentações bancárias da conta de código 3

    delete from movimentacao where codigo_conta = 3;

7. Retorne todos os usuários que nasceram no mês de agosto

    SELECT * FROM usuario WHERE MONTH(data_de_nascimento) = 8;

8. Busque por todos os usuários que nasceram sexta-feira;

    SELECT * FROM usuario WHERE DAYOFWEEK(data_de_nascimento) = 6;

9. Faça uma consulta que projete o código, nome e idade de cada usuário



10. Liste todas as movimentações bancárias ordenadas de forma decrescente por data da movimentação

    SELECT * FROM movimentacao ORDER BY data_movimentacao DESC;

11. Busque pala movimentação bancária mais antiga

    SELECT * FROM movimentacao ORDER BY data_movimentacao ASC LIMIT 1;

12. Busque por todos os usuários com cep null

    select * from usuario where cep is null;


Função de agregação
1. Selecione o maior saldo bancário da conta do tipo poupança

    select max(saldo) from conta where codigo_tipo_conta = 1;

2. Busque a média das movimentações bancárias que contém na descrição o texto “alimentação”

    select avg(valor) from movimentacao where descricao LIKE 'Alimentação%';

3. Busque pela quantidade de movimentações bancárias realizadas entre as datas de 15 de abril de 2023 e 12 de maio de 2023



4. Busque a quantidade de usuários que o cep não é null

    select count(*) from usuario where cep is not null;

5. Para as movimentações bancárias com valor menor do que 10 qual o valor min, max e a média?



6. Faça uma consulta que retorna a quantidade dinheiro que entrou no banco durante o período de novembro e dezembro de 2023




Agregação

1. Selecione a soma de todas dos saldos de todas as contas bancárias

    select sum(saldo) from conta;

2. Selecione a média das movimentações

    select avg(valor) from movimentacao;

3. Selecione a média das movimentações bancárias agrupado por código da conta 

    select avg(valor), codigo_conta from movimentacao group by codigo_conta;

4. Selecione a quantidade de movimentações bancárias por conta bancária

    select count(*), codigo_conta from movimentacao group by codigo_conta;


JOIN

1. Selecione codigo, nome e saldo bancário de todos os usuários

    select u.codigo, u.nome, SUM(c.saldo) as total_saldo from usuario u
    left join conta c on u.codigo = c.codigo_usuario
    group by u.codigo, u.nome;


2. Retorno código e nome de todos os usuários que contém pelo menos 1 conta bancária

    select u.codigo, u.nome 
    from usuario u 
    inner join conta c on u.codigo = c.codigo_usuario;


3. Retorno código e nome de todos os usuários que contém pelo menos 1 conta bancária e todas as movimentações bancárias de cada conta independente se a conta contém movimentação ou não

    select u.codigo, u.nome, m.valor, m.data_movimentacao
    from usuario u 
    inner join conta c 
    on u.codigo = c.codigo_usuario
    left join movimentacao m
    on m.codigo_conta = u.codigo;


4. Retorno o código e nome de cada usuário juntamente com a junção com todos os tipos de contas existentes no banco de dados

    select u.codigo, u.nome, c.descricao
    from usuario u 
    left join conta c 
    on u.codigo = c.codigo_usuario;


5. Para cada usuário selecione seu código e nome juntamente com o saldo de todas as suas contas bancárias e o tipo de conta. Para cada conta bancária a quantidade de movimentações

    SELECT u.codigo, u.nome, c.descricao as tipo_conta, c.saldo, COUNT(m.codigo) AS qnt_movimentacoes
    FROM usuario u
    LEFT JOIN conta c ON u.codigo = c.codigo_usuario
    LEFT JOIN movimentacao m ON c.codigo_usuario = m.codigo_conta
    GROUP BY u.codigo, u.nome, c.descricao, c.saldo;


6.Selecione todas as movimentações bancárias do usuário de código 1

    select u.codigo, u.nome, m.tipo_movimentacao as Tipo, m.valor
    from usuario u
    left join movimentacao m on u.codigo = m.codigo_conta
    where u.codigo = 1;